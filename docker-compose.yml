version: "3.3"
services:
  prometheus:
    image: prom/prometheus:latest
    # network_mode: "host"
    container_name: prometheus
    # user: "1000:1000"
    # user: "root"
    volumes:
      - ./prometheus:/etc/prometheus
      # - ./prometheus_data:/prometheus
      - prometheus_data:/prometheus
      - ./prometheus/alert:/alertmanager
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--storage.tsdb.retention.size=1GB"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"
      - "--log.level=info"
    restart: unless-stopped
    ports:
      - "9090:9090"
    # depends_on:
    #   - cadvisor
    #   - node-exporter
    #   - prometheus-bot
    #   - alertmanager
    networks:
      - monitor-net

  alertmanager:
    image: prom/alertmanager:latest
    #network_mode: "host"
    user: root
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
      - ./alertmanager/data:/etc/alermanager/data
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/etc/alertmanager/data"
    restart: unless-stopped
    ports:
      - '9093:9093'
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    # network_mode: "host"
    # pid: "host"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
        #  - GF_INSTALL_PLUGINS="grafana-piechart-panel"
      # - GF_SERVER_HTTP_PORT=8080
    # user: "1000:1000"
    # user: "root"
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitor-net

networks:
  monitor-net:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}
